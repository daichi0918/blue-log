version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    platform: linux/amd64
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      NODE_ENV: development
    depends_on:
      - api-server

  api-server:
    build:
      context: ./api-server
      dockerfile: Dockerfile
    container_name: api-server
    platform: linux/amd64
    ports:
      - '8080:80'
    volumes:
      - ./api-server:/usr/src/app
    environment:
      NODE_ENV: production
    depends_on:
      - postgres

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    platform: linux/amd64
    ports:
      - '5432:5432'
    volumes:
      - ./docker/postgres/init.d:/docker-entrypoint-initdb.d
      - ./docker/postgres/pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: nestjsuser
      POSTGRES_PASSWORD: nestjspass
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8'
      POSTGRES_DB: bluelogdb
    hostname: postgres
    restart: always
    user: root
